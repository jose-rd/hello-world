#Comandos de Git
Git --version # Apropiado para saver si git esta instalado.

Git config --global user.name ["jose-rd] #git usa esta informacion para identificar quien hizo los cambioss
Git config --global user.email ["textodigital@outlook.com"] #--global establece este id para todos los repositorio. Si removemos --global, el id solo se establece para el repositorio acgtual.

Git status #Files may have two status: Tracked and Untracked.
Git status --short #informacion compacta

        Short status flags are:

        ?? - Untracked files
        A - Files added to stage
        M - Modified files
        D - Deleted files

#Lets say there are 3 areas: Working directory, Staging Area, Commited files(Repository)

Git add [fileName] #Agrega el archivo especificado al staggin area.
Git add --all or Git add . #Agrega todos los files actuales al statgging area. Todos (Agregados,modified,deleted,Untracked).
Git add -A #shorhand command for Git Add --all

Git commit -m "My primer commit" El flag -m(message) Luego el mensaje del commit entre comilllas.

Git commit -a -m "Pasa arhivos directamente del working-directory al commit(repositorio)" Archivos no por el staggin area. No se recomienda.
             Los archivos Untracked no son commited. Solos los A(add or new), M(modified), D(deleted)

Git [command] -help # Display con CONSOLE help for a specific coomand
Git [command] --help # Display con BROWSER help for a specific coomand

Git help --all # Display a list for all possible commands

git log #Despliega todos los commits realizados. (El historial de commits)
Git log --online #Despliegue compacto. En una linea.

Git branch [nombreDeRamaNueva] #Crea nueva rama, copia del proyecto principal  
Git branch #Despliega las ramas del repositorio.
Git branch -d [RamaASerEliminada] #Elimina una rama
Git branch -a # lista todas las ramas, LOCALES Y REMOTAS.
Git branch -r #Lista solo las ramas remotas.

Git checkout [nombreDeRama] #Moving us from the current branch, to the one specified at the end of the command.
Git checkout -b [RamaNueva] #crea la [RamaNueva] y la establece como la rama actual
Si queremos "copiar" una rama remota en nuestro repo local.   Vasta con dar CHECKOUT HACIA ELLA, y luego hacer un PULL. 
Al hacer un CHECKOUT, la rama remota es creada en local.


Git merge [RamaExterna] #combina una rama [RamaExterna] con la rama actual



Git fetch # Visualiza el historial de cambios en el [origin], pero no los implementa.
Git pull # Implementa los cambios del remoto([oriigin)] en el repo local.

Git log # Lista de Commits
Git log origin/main --oneline # Lista de commits en remoto(origin/main) Una sola linea por commit

Git diff orgin/main #diferencia con remoto (origin/main)

Git merge origin/main #mbines the current branch, with a specified branch.

Git push origin [ramalocal] #  Envia una rama local, con hacia el repo remoto.




